"use strict";
// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file aserto/authorizer/v2/api/policy_context.proto (package aserto.authorizer.v2.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyContext = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message aserto.authorizer.v2.api.PolicyContext
 */
class PolicyContext extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * policy path aka package name
         *
         * @generated from field: string path = 1;
         */
        this.path = "";
        /**
         * list (1..N) of policy decisions (aka rules)
         *
         * @generated from field: repeated string decisions = 2;
         */
        this.decisions = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PolicyContext().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PolicyContext().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PolicyContext().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PolicyContext, a, b);
    }
}
exports.PolicyContext = PolicyContext;
PolicyContext.runtime = protobuf_1.proto3;
PolicyContext.typeName = "aserto.authorizer.v2.api.PolicyContext";
PolicyContext.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "decisions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
]);
