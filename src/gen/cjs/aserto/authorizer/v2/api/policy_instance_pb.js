"use strict";
// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file aserto/authorizer/v2/api/policy_instance.proto (package aserto.authorizer.v2.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolicyInstance = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message aserto.authorizer.v2.api.PolicyInstance
 */
class PolicyInstance extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * policy name
         *
         * @generated from field: string name = 1;
         */
        this.name = "";
        /**
         * label identifying the instance of the policy
         *
         * @generated from field: string instance_label = 2;
         */
        this.instanceLabel = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PolicyInstance().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PolicyInstance().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PolicyInstance().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PolicyInstance, a, b);
    }
}
exports.PolicyInstance = PolicyInstance;
PolicyInstance.runtime = protobuf_1.proto3;
PolicyInstance.typeName = "aserto.authorizer.v2.api.PolicyInstance";
PolicyInstance.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
