// @generated by protoc-gen-es v1.10.0 with parameter "target=js"
// @generated from file aserto/authorizer/v2/authorizer.proto (package aserto.authorizer.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Struct } from "@bufbuild/protobuf";
import { PolicyInstance } from "./api/policy_instance_pb.js";
import { Module } from "./api/module_pb.js";
import { PolicyContext } from "./api/policy_context_pb.js";
import { IdentityContext } from "./api/identity_context_pb.js";

/**
 * @generated from enum aserto.authorizer.v2.PathSeparator
 */
export const PathSeparator = /*@__PURE__*/ proto3.makeEnum(
  "aserto.authorizer.v2.PathSeparator",
  [
    {no: 0, name: "PATH_SEPARATOR_UNKNOWN", localName: "UNKNOWN"},
    {no: 1, name: "PATH_SEPARATOR_DOT", localName: "DOT"},
    {no: 2, name: "PATH_SEPARATOR_SLASH", localName: "SLASH"},
  ],
);

/**
 * @generated from enum aserto.authorizer.v2.TraceLevel
 */
export const TraceLevel = /*@__PURE__*/ proto3.makeEnum(
  "aserto.authorizer.v2.TraceLevel",
  [
    {no: 0, name: "TRACE_LEVEL_UNKNOWN", localName: "UNKNOWN"},
    {no: 1, name: "TRACE_LEVEL_OFF", localName: "OFF"},
    {no: 2, name: "TRACE_LEVEL_FULL", localName: "FULL"},
    {no: 3, name: "TRACE_LEVEL_NOTES", localName: "NOTES"},
    {no: 4, name: "TRACE_LEVEL_FAILS", localName: "FAILS"},
  ],
);

/**
 * @generated from message aserto.authorizer.v2.InfoRequest
 */
export const InfoRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.InfoRequest",
  [],
);

/**
 * @generated from message aserto.authorizer.v2.InfoResponse
 */
export const InfoResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.InfoResponse",
  () => [
    { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "commit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "os", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "arch", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.GetPolicyRequest
 */
export const GetPolicyRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.GetPolicyRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "field_mask", kind: "message", T: FieldMask },
    { no: 3, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.GetPolicyResponse
 */
export const GetPolicyResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.GetPolicyResponse",
  () => [
    { no: 1, name: "result", kind: "message", T: Module },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.ListPoliciesRequest
 */
export const ListPoliciesRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.ListPoliciesRequest",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
    { no: 2, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.ListPoliciesResponse
 */
export const ListPoliciesResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.ListPoliciesResponse",
  () => [
    { no: 1, name: "result", kind: "message", T: Module, repeated: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.DecisionTreeRequest
 */
export const DecisionTreeRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.DecisionTreeRequest",
  () => [
    { no: 1, name: "policy_context", kind: "message", T: PolicyContext },
    { no: 2, name: "identity_context", kind: "message", T: IdentityContext },
    { no: 3, name: "options", kind: "message", T: DecisionTreeOptions },
    { no: 4, name: "resource_context", kind: "message", T: Struct },
    { no: 5, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.DecisionTreeOptions
 */
export const DecisionTreeOptions = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.DecisionTreeOptions",
  () => [
    { no: 1, name: "path_separator", kind: "enum", T: proto3.getEnumType(PathSeparator) },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.DecisionTreeResponse
 */
export const DecisionTreeResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.DecisionTreeResponse",
  () => [
    { no: 1, name: "path_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "path", kind: "message", T: Struct },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.IsRequest
 */
export const IsRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.IsRequest",
  () => [
    { no: 1, name: "policy_context", kind: "message", T: PolicyContext },
    { no: 2, name: "identity_context", kind: "message", T: IdentityContext },
    { no: 3, name: "resource_context", kind: "message", T: Struct },
    { no: 4, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.Decision
 */
export const Decision = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.Decision",
  () => [
    { no: 1, name: "decision", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "is", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.IsResponse
 */
export const IsResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.IsResponse",
  () => [
    { no: 1, name: "decisions", kind: "message", T: Decision, repeated: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.QueryOptions
 */
export const QueryOptions = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.QueryOptions",
  () => [
    { no: 1, name: "metrics", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "instrument", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "trace", kind: "enum", T: proto3.getEnumType(TraceLevel) },
    { no: 4, name: "trace_summary", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.QueryRequest
 */
export const QueryRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.QueryRequest",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "input", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "options", kind: "message", T: QueryOptions, opt: true },
    { no: 4, name: "policy_context", kind: "message", T: PolicyContext, opt: true },
    { no: 5, name: "identity_context", kind: "message", T: IdentityContext, opt: true },
    { no: 6, name: "resource_context", kind: "message", T: Struct, opt: true },
    { no: 7, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.CompileRequest
 */
export const CompileRequest = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.CompileRequest",
  () => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "input", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "unknowns", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "disable_inlining", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "options", kind: "message", T: QueryOptions, opt: true },
    { no: 6, name: "policy_context", kind: "message", T: PolicyContext, opt: true },
    { no: 7, name: "identity_context", kind: "message", T: IdentityContext, opt: true },
    { no: 8, name: "resource_context", kind: "message", T: Struct, opt: true },
    { no: 9, name: "policy_instance", kind: "message", T: PolicyInstance, opt: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.CompileResponse
 */
export const CompileResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.CompileResponse",
  () => [
    { no: 1, name: "result", kind: "message", T: Struct },
    { no: 2, name: "metrics", kind: "message", T: Struct },
    { no: 3, name: "trace", kind: "message", T: Struct, repeated: true },
    { no: 4, name: "trace_summary", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message aserto.authorizer.v2.QueryResponse
 */
export const QueryResponse = /*@__PURE__*/ proto3.makeMessageType(
  "aserto.authorizer.v2.QueryResponse",
  () => [
    { no: 1, name: "response", kind: "message", T: Struct },
    { no: 2, name: "metrics", kind: "message", T: Struct },
    { no: 3, name: "trace", kind: "message", T: Struct, repeated: true },
    { no: 4, name: "trace_summary", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

